# Auto-generated file. Do not edit!
###################################


from typing import Optional
from pydantic import Field
from .__base import BusinessObjectModelInstanceBase, BusinessObjectModelData
{% if validators %}
from cherwell_pydantic_api import validators
{% endif %}
from cherwell_pydantic_api.types import BusObID, FieldID
{% if schema.relationships %}
from .__base import BusinessObjectRelationship
from cherwell_pydantic_api.types import RelationshipID
{% endif %}
{% for module in modules|sort %}
import {{ module }}
{% endfor %}


class {{ schema.name }}(BusinessObjectModelInstanceBase):
    class _ModelData(BusinessObjectModelData):
        busobid = BusObID({{ schema.busObId|repr }})
        firstrecidfield = FieldID({{ schema.firstRecIdField|repr }})
        recidfields = FieldID({{ schema.recIdFields|repr }})
        firstrecfield = {{ firstrecfield|repr }}
        {% if schema.stateFieldId %}
        statefieldid = FieldID({{ schema.stateFieldId|repr }})
        statefield = {{ statefield|repr }}
        {% endif %}
        {% if schema.states %}
        states = {{ schema.states.split(',') }}
        {% endif %}
        {% if schema.relationships %}
        relationships = {
            {% for rel_id, relationship in schema.relationships.items()|sort(attribute='0') %}
            RelationshipID({{ rel_id|repr }}):  # {{ relationship.target_name }}
                BusinessObjectRelationship({{ relationship.target|repr }},
                oneToMany={% if relationship.cardinality == 'OneToMany' %}True{% else %}False{% endif %},
                description={{ relationship.description|repr }},
                displayName={{ relationship.displayName|repr }}),
            {% endfor %}
        }
        {% endif %}

    class Config:
        title = {{ schema.name|repr }}

    {% for field in fields %}
    {{ field.name }}: {{ field.python_type }} = Field(None,
        {% if field.displayName %}title={{ field.displayName|repr }},{% endif %}
        {% if field.description %}description={{ field.description|repr }},{% endif %}
        cw_fi={{ field.fieldid_parts['FI']|repr }},
        {% if field.category %}cw_category={{ field.category|repr }},{% endif %}
        {% if field.details %}cw_details={{ field.details|repr }},{% endif %}
        {{ field.pydantic_field_params }})
    {% endfor %}

    {% for validator, v_fields in validators.items() %}
    _{{ validator }} = validators.{{ validator }}(
        {% for field in v_fields %}
        {{ field.name|repr }},
        {% endfor %}
        pre=True, allow_reuse=True)
    {% endfor %}
